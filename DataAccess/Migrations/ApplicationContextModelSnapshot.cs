// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccess.Entities.Distribution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Distributions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Exponential"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Normal"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Uniform"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.DistributionParameters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("DelayMeanAB")
                        .HasColumnType("float");

                    b.Property<double>("DelayMeanCs")
                        .HasColumnType("float");

                    b.Property<double>("DelayMeanL")
                        .HasColumnType("float");

                    b.Property<double>("DeviationAB")
                        .HasColumnType("float");

                    b.Property<double?>("DeviationCs")
                        .HasColumnType("float");

                    b.Property<double>("DeviationL")
                        .HasColumnType("float");

                    b.Property<int>("DistributionABId")
                        .HasColumnType("int");

                    b.Property<int>("DistributionCsId")
                        .HasColumnType("int");

                    b.Property<int>("DistributionLId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DistributionABId");

                    b.HasIndex("DistributionCsId");

                    b.HasIndex("DistributionLId");

                    b.ToTable("DistributionParameters");
                });

            modelBuilder.Entity("DataAccess.Entities.Experiment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Accuracy")
                        .HasColumnType("float");

                    b.Property<int>("DistributionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DistributionId");

                    b.ToTable("Experiments");
                });

            modelBuilder.Entity("DataAccess.Entities.Percentage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExperimentId")
                        .HasColumnType("int");

                    b.Property<int>("N")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ExperimentId");

                    b.ToTable("Percentages");
                });

            modelBuilder.Entity("DataAccess.Entities.DistributionParameters", b =>
                {
                    b.HasOne("DataAccess.Entities.Distribution", "DistributionAB")
                        .WithMany("DistributionParametersAB")
                        .HasForeignKey("DistributionABId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Distribution", "DistributionCs")
                        .WithMany("DistributionParametersCs")
                        .HasForeignKey("DistributionCsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Distribution", "DistributionL")
                        .WithMany("DistributionParametersL")
                        .HasForeignKey("DistributionLId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DistributionAB");

                    b.Navigation("DistributionCs");

                    b.Navigation("DistributionL");
                });

            modelBuilder.Entity("DataAccess.Entities.Experiment", b =>
                {
                    b.HasOne("DataAccess.Entities.DistributionParameters", "Distribution")
                        .WithMany("Experiments")
                        .HasForeignKey("DistributionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Distribution");
                });

            modelBuilder.Entity("DataAccess.Entities.Percentage", b =>
                {
                    b.HasOne("DataAccess.Entities.Experiment", "Experiment")
                        .WithMany("Percentages")
                        .HasForeignKey("ExperimentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Experiment");
                });

            modelBuilder.Entity("DataAccess.Entities.Distribution", b =>
                {
                    b.Navigation("DistributionParametersAB");

                    b.Navigation("DistributionParametersCs");

                    b.Navigation("DistributionParametersL");
                });

            modelBuilder.Entity("DataAccess.Entities.DistributionParameters", b =>
                {
                    b.Navigation("Experiments");
                });

            modelBuilder.Entity("DataAccess.Entities.Experiment", b =>
                {
                    b.Navigation("Percentages");
                });
#pragma warning restore 612, 618
        }
    }
}
